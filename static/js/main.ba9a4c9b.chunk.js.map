{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","prevState","Modal","ReactDom","createPortal","document","getElementById","AppUI","Fragment","lenght","map","App","ReactDOM","render"],"mappings":"2VAGMA,EAAcC,IAAMC,gBAE1B,SAASC,EAAaC,GACpB,MCJF,SAAyBC,EAAUC,GACjC,MAA0BL,IAAMM,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BR,IAAMM,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBV,IAAMM,SAASD,GAAvC,mBAAOM,EAAP,KAAaC,EAAb,KAiCA,OA/BAZ,IAAMa,WAAU,WACdC,YAAW,WACT,IACE,IACIC,EADEC,EAAmBC,aAAaC,QAAQd,GAGzCY,EAIHD,EAAaI,KAAKC,MAAMJ,IAHxBC,aAAaL,QAAQR,EAAUe,KAAKE,UAAUhB,IAC9CU,EAAaV,GAKfO,EAAQG,GACRL,GAAW,GACX,MAAMH,GACNC,EAASD,MAEV,QAaE,CACLI,OACAW,SAZe,SAACC,GAChB,IACE,IAAMC,EAAkBL,KAAKE,UAAUE,GACvCN,aAAaL,QAAQR,EAAUoB,GAC/BZ,EAAQW,GACR,MAAMhB,GACNC,EAASD,KAOXE,UACAF,SD/BEkB,CAAgB,WAAY,IAJxBC,EADR,EACEf,KACUgB,EAFZ,EAEEL,SACAb,EAHF,EAGEA,QACAF,EAJF,EAIEA,MAEF,EAAsCP,IAAMM,SAAS,IAArD,mBAAOsB,EAAP,KAAoBC,EAApB,KACA,EAAkC7B,IAAMM,UAAS,GAAjD,mBAAOwB,EAAP,KAAkBC,EAAlB,KAEMC,EAAiBN,EAAMO,QAAO,SAAAC,GAAI,QAAMA,EAAKC,aAAWC,OACxDC,EAAaX,EAAMU,OAErBE,EAAgB,GAGlBA,GADGV,EAAYQ,QAAU,EACTV,EAEAA,EAAMO,QAAO,SAAAC,GAC3B,IAAMK,EAAWL,EAAKM,KAAKC,cACrBC,EAAad,EAAYa,cAC/B,OAAOF,EAASI,SAASD,MA2B7B,OACE,cAAC3C,EAAY6C,SAAb,CAAsBC,MAAO,CAC3BpC,UACAF,QACA8B,aACAL,iBACAJ,cACAC,iBACAS,gBACAQ,QAhCY,SAACN,GACf,IAAMO,EAAQ,YAAOrB,GACrBqB,EAASC,KAAK,CACZb,WAAW,EACXK,SAEFb,EAAUoB,IA2BRE,aAxBiB,SAACT,GACpB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAClDO,EAAQ,YAAOrB,GACrBqB,EAASG,GAAWf,WAAY,EAChCR,EAAUoB,IAqBRK,WAlBe,SAACZ,GAClB,IAAMU,EAAYxB,EAAMyB,WAAU,SAAAjB,GAAI,OAAIA,EAAKM,OAASA,KAClDO,EAAQ,YAAOrB,GACrBqB,EAASM,OAAOH,EAAW,GAC3BvB,EAAUoB,IAeRjB,YACAC,gBAZF,SAcG5B,EAAMmD,W,MEhEb,SAASC,IACL,MAAuCvD,IAAMwD,WAAWzD,GAAhDsC,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,eACpB,OACI,qBAAIyB,UAAU,cAAd,4BAA4CzB,EAA5C,OAAgEK,EAAhE,c,MCHR,SAASqB,IACL,MAAuC1D,IAAMwD,WAAWzD,GAAhD6B,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAOrB,OACI,uBACI4B,UAAU,aACVE,YAAY,aACZd,MAAOjB,EACPgC,SAVoB,SAACC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOnB,OACzBhB,EAAegC,EAAMG,OAAOnB,U,MCNpC,SAASoB,EAAS9D,GACd,OACI,kCACI,6BACKA,EAAMmD,a,MCJvB,SAASY,EAAU/D,GACf,OACI,qBAAIsD,UAAU,WAAd,UACI,sBACIA,UAAS,0BAAqBtD,EAAMgC,WAAa,sBACjDgC,QAAShE,EAAMiE,WAFnB,oBAMA,mBAAGX,UAAS,qBAAgBtD,EAAMgC,WAAa,wBAA/C,SACKhC,EAAMqC,OAEX,sBACIiB,UAAU,mBACVU,QAAShE,EAAMkE,SAFnB,uB,MCXZ,SAASC,IACL,MAAwCtE,IAAMM,SAAS,IAAvD,mBAAOiE,EAAP,KAAqBC,EAArB,KACA,EAGIxE,IAAMwD,WAAWzD,GAFjB+C,EADJ,EACIA,QACAf,EAFJ,EAEIA,aAiBJ,OACI,uBAAM0C,SAPO,SAACZ,GACdA,EAAMa,iBACN5B,EAAQyB,GACRxC,GAAa,IAIb,UACI,2DACA,0BAAUc,MAAO0B,EAAcX,SAjBtB,SAACC,GACdW,EAAgBX,EAAMG,OAAOnB,QAgB0Bc,YAAY,uCAC/D,sBAAKF,UAAU,2BAAf,UACI,wBAAQkB,KAAK,SAASlB,UAAU,0CAA0CU,QAfrE,WACbpC,GAAa,IAcL,sBAGA,wBAAQ4C,KAAK,SAASlB,UAAU,uCAAhC,6B,MC7BhB,SAASmB,EAAkBzE,GAKvB,OACI,wBACIsD,UAAU,mBACVU,QAPc,WAClBhE,EAAM4B,cAAa,SAAA8C,GAAS,OAAKA,MAIjC,e,MCNR,SAASC,EAAT,GAA6B,IAAZxB,EAAW,EAAXA,SACb,OAAOyB,IAASC,aACZ,qBAAKvB,UAAU,kBAAf,SACKH,IAEL2B,SAASC,eAAe,UCEhC,SAASC,IACL,MAQInF,IAAMwD,WAAWzD,GAPjBQ,EADJ,EACIA,MACAE,EAFJ,EAEIA,QACA6B,EAHJ,EAGIA,cACAW,EAJJ,EAIIA,aACAG,EALJ,EAKIA,WACAtB,EANJ,EAMIA,UACAC,EAPJ,EAOIA,aAGJ,OACI,eAAC,IAAMqD,SAAP,WACI,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,eAAC,EAAD,WACK7E,GAAQ,iEACRE,GAAU,oEACRA,IAAY6B,EAAc+C,QAAS,0DAErC/C,EAAcgD,KAAI,SAAApD,GAAI,OACvB,cAAC,EAAD,CAEIM,KAAMN,EAAKM,KACXL,UAAWD,EAAKC,UAChBiC,WAAY,kBAAMnB,EAAaf,EAAKM,OACpC6B,SAAU,kBAAMjB,EAAWlB,EAAKM,QAJ3BN,EAAKM,cASfV,GACC,cAAC,EAAD,UACI,cAAC,EAAD,MAIR,cAAC,EAAD,CACIC,aAAcA,OCsCfwD,MARf,WACE,OACE,cAACrF,EAAD,UACE,cAACiF,EAAD,OC/ENK,IAASC,OACL,cAAC,EAAD,IACFR,SAASC,eAAe,W","file":"static/js/main.ba9a4c9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n  const {\r\n    item: todos,\r\n    saveItem: saveTodos,\r\n    loading,\r\n    error,\r\n  } = useLocalStorage('TODOS_V1', []);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedTodos = [];\r\n\r\n  if (!searchValue.length >= 1) {\r\n    searchedTodos = todos;\r\n  } else {\r\n    searchedTodos = todos.filter(todo => {\r\n      const todoText = todo.text.toLowerCase();\r\n      const searchText = searchValue.toLowerCase();\r\n      return todoText.includes(searchText);\r\n    });\r\n  }\r\n\r\n  const addTodo = (text) => {\r\n    const newTodos = [...todos];\r\n    newTodos.push({\r\n      completed: false,\r\n      text,\r\n    });\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const completeTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos[todoIndex].completed = true;\r\n    saveTodos(newTodos);\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    const newTodos = [...todos];\r\n    newTodos.splice(todoIndex, 1);\r\n    saveTodos(newTodos);\r\n  };\r\n  \r\n  return (\r\n    <TodoContext.Provider value={{\r\n      loading,\r\n      error,\r\n      totalTodos,\r\n      completedTodos,\r\n      searchValue,\r\n      setSearchValue,\r\n      searchedTodos,\r\n      addTodo,\r\n      completeTodo,\r\n      deleteTodo,\r\n      openModal,\r\n      setOpenModal,\r\n    }}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from 'react';\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n  const [error, setError] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [item, setItem] = React.useState(initialValue);\r\n  \r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n        let parsedItem;\r\n        \r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n          parsedItem = initialValue;\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        setLoading(false);\r\n      } catch(error) {\r\n        setError(error);\r\n      }\r\n    }, 1000);\r\n  });\r\n  \r\n  const saveItem = (newItem) => {\r\n    try {\r\n      const stringifiedItem = JSON.stringify(newItem);\r\n      localStorage.setItem(itemName, stringifiedItem);\r\n      setItem(newItem);\r\n    } catch(error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  return {\r\n    item,\r\n    saveItem,\r\n    loading,\r\n    error,\r\n  };\r\n}\r\n\r\nexport { useLocalStorage };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoCounter.css';\r\n\r\nfunction TodoCounter (){\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\r\n    return (\r\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TO-DO's</h2>\r\n    );\r\n}\r\n\r\nexport { TodoCounter };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoSearch.css';\r\n\r\nfunction TodoSearch () { \r\n    const { searchValue, setSearchValue} = React.useContext(TodoContext);\r\n\r\n    const onSearchValueChange = (event) => {\r\n        console.log(event.target.value);\r\n        setSearchValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <input \r\n            className=\"TodoSearch\" \r\n            placeholder=\"Nueva Nota\" \r\n            value={searchValue}\r\n            onChange={onSearchValueChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport { TodoSearch };","import React from 'react';\r\nimport './TodoList.css';\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport { TodoList };","import React from \"react\";\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem (props) {\r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <span \r\n                className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n                onClick={props.onComplete}\r\n            >\r\n            ✓\r\n            </span>\r\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\r\n                {props.text}\r\n                </p>\r\n            <span \r\n                className=\"Icon Icon-delete\"\r\n                onClick={props.onDelete}\r\n            >\r\n            ✗\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport { TodoItem };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport './TodoForm.css';\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    };\r\n\r\n    const onCancel = ()=> {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault ();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe tu nuevo TO-DO</label>\r\n            <textarea value={newTodoValue} onChange={onChange} placeholder=\"Cortar la cebolla para el almuerzo\" />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button type=\"button\" className=\"TodoForm-button TodoForm-button--cancel\" onClick={onCancel}>\r\n                    Cancelar\r\n                </button>\r\n                <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\">\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm };","import React from 'react';\r\nimport './CreateTodoButton.css';\r\n\r\n\r\nfunction CreateTodoButton (props) {\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState);\r\n    };\r\n\r\n    return(\r\n        <button \r\n            className=\"CreateTodoButton\"\r\n            onClick={onClickButton}\r\n            >\r\n            +\r\n        </button>\r\n    );\r\n}\r\n\r\nexport { CreateTodoButton };","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children}) {\r\n    return ReactDom.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport { Modal };","import React from 'react';\r\nimport { TodoContext } from '../TodoContext';\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { TodoForm } from '../TodoForm';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { Modal } from '../Modal';\r\n\r\n\r\nfunction AppUI(){\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        completeTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TodoCounter />\r\n      \r\n            <TodoSearch />\r\n      \r\n            <TodoList>\r\n                {error &&<p>Desespérate, hubo un error...</p>}\r\n                {loading &&<p>Estamos cargando, no desesperes...</p>}\r\n                {(!loading && !searchedTodos.lenght)&&<p>¡Crea tu primer TO-DO!</p>}\r\n\r\n                {searchedTodos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.text} \r\n                    text={todo.text}\r\n                    completed={todo.completed} \r\n                    onComplete={() => completeTodo(todo.text)}\r\n                    onDelete={() => deleteTodo(todo.text)}\r\n            />\r\n            ))}\r\n            </TodoList>\r\n\r\n            {!!openModal &&(\r\n                <Modal>\r\n                    <TodoForm />\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton \r\n                setOpenModal={setOpenModal}\r\n            />\r\n      \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { AppUI };","\nimport React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\n/*unction useLocalStorage (itemName, initialValue) {\n\n  const localStorageItem = localStorage.getItem('itemName');\n  let parsedItem;\n\n  if(!localStorageItem) {\n    localStorage.setItem('itemName', JSON.stringify(initialValue));\n    parsedItem = initialValue;\n  } else {\n    parsedItem = JSON.parse(localStorageItem);\n  }\n\n  const [item, setItem] = React.useState(parsedItem);\n  \n  const saveItem = (newItem) => {\n    const stringifiedItem = JSON.stringify(newItem);\n    localStorage.setItem('itemName', stringifiedItem);\n    setItem(newItem);\n  };\n\n  return [\n    item,\n    saveItem,\n  ];\n}\n\n\nfunction App() {\n  const [todos, saveTodos] = useLocalStorage('TODO_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return [\n    <AppUI \n      totalTodos={totalTodos}\n      completedTodos={completedTodos}\n      searchValue={searchValue}\n      setSearchValue={setSearchValue}\n      searchedTodos={searchedTodos}\n      completeTodo={completeTodo}\n      deleteTodo={deleteTodo}\n    />\n  ];\n}\n\nexport default App;*/\n\nfunction App() {\n  return(\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}